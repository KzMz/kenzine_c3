module webgpu::wgpu;

enum WGPUNativeFeature : usz(long value)
{
    PUSH_CONSTANTS = 0x00030001,
    TEXTURE_ADAPTER_SPECIFIC_FORMAT_FEATURES = 0x00030002,
    MULTIDRAW_INDIRECT = 0x00030003,
    MULTIDRAW_INDIRECT_COUNT = 0x00030004,
    VERTEX_WRITABLE_STORAGE = 0x00030005,
    TEXTURE_BINDING_ARRAY = 0x00030006,
    SAMPLED_TEXTURE_AND_STORAGE_BUFFER_ARRAY_NON_UNIFORM_INDEXING = 0x00030007,
    PIPELINE_STATISTICS_QUERY = 0x00030008,
    STORAGE_RESOURCE_BINDING_ARRAY = 0x00030009,
    PARTIALLY_BOUND_BINDING_ARRAY = 0x0003000A,
    TEXTURE_FORMAT_16BIT_NORM = 0x0003000B,
    TEXTURE_COMPRESSION_ASTC_HDR = 0x0003000C,
    TIMESTAMP_QUERY_INSIDE_PASSES = 0x0003000D,
    MAPPABLE_PRIMARY_BUFFERS = 0x0003000E,
    BUFFER_BINDING_ARRAY = 0x0003000F,
    UNIFORM_BUFFER_AND_STORAGE_TEXTURE_ARRAY_NON_UNIFORM_INDEXING = 0x00030010,
    ADDRESS_MODE_CLAMP_TO_ZERO = 0x00030011,
    ADDRESS_MODE_CLAMP_TO_BORDER = 0x00030012,
    POLYGON_MODE_LINE = 0x00030013,
    POLYGON_MODE_POINT = 0x00030014,
    CONSERVATIVE_RASTERIZATION = 0x00030015,
    CLEAR_TEXTURE = 0x00030016,
    SPIRV_SHADER_PASSTHROUGH = 0x00030017,
    MULTIVIEW = 0x00030018,
    VERTEX_ATTRIBUTES_64BIT = 0x00030019,
    TEXTURE_FORMAT_NV12 = 0x0003001A,
    RAY_TRACING_ACCELERATION_STRUCTURE = 0x0003001B,
    RAY_QUERY = 0x0003001C,
    SHADER_FLOAT64 = 0x0003001D,
    SHADER_INT16 = 0x0003001E,
    SHADER_PRIMITIVE_INDEX = 0x0003001F,
    SHADER_EARLY_DEPTH_TEST = 0x00030020,
    FORCE_32 = 0x7FFFFFFF
}

def SubmissionIndex = long;

struct WrappedSubmissionIndex
{
    webgpu::Queue queue;
    SubmissionIndex submissionIndex;
}

// wgpu-native specific
extern fn CBool webgpu::Device.poll(webgpu::Device device, CBool wait, WrappedSubmissionIndex* wrappedSubmissionIndex) @extern("wgpuDevicePoll");